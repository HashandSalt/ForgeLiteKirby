{"version":3,"sources":["webpack:///./src/sass/03-generic/_normalize.scss","webpack:///./src/sass/site.scss","webpack:///./src/sass/04-elements/_elements.typography.scss","webpack:///./node_modules/slatesasskits/slatetype/libs/_helpers.scss","webpack:///./src/sass/01-settings/_settings.type.scss","webpack:///./src/sass/01-settings/_settings.colors.scss","webpack:///./src/sass/01-settings/_settings.type-stacks.scss","webpack:///./node_modules/slatesass/libs/_helpers.scss","webpack:///./src/sass/04-elements/_elements.html.scss","webpack:///./src/sass/04-elements/_elements.body.scss","webpack:///./src/sass/04-elements/_elements.media.scss","webpack:///./src/sass/04-elements/_elements.buttons.scss","webpack:///./node_modules/slatesasskits/slatebuttons/libs/_helpers.scss","webpack:///./node_modules/slatesass/libs/functions/_util.scss","webpack:///./src/sass/04-elements/_elements.table.scss","webpack:///./node_modules/slatesasskits/slatetables/libs/_helpers.scss","webpack:///./src/sass/05-objects/_objects.container.scss","webpack:///./node_modules/slatesasskits/slategrid/libs/_helpers.scss"],"names":[],"mappings":"AAAA;AAEA;gFAAA;AAGA;;;GAAA;AAKA;EACE;EAAmB;EACnB;EAAgC;CCAlC;;ADGA;gFAAA;AAGA;;GAAA;AAIA;EACE;CCFF;;ADKA;;GAAA;AAIA;EACE;CCHF;;ADMA;;;GAAA;AAKA;EACE;EACA;CCJF;;ADOA;gFAAA;AAGA;;;GAAA;AAKA;EACE;EAAyB;EACzB;EAAW;EACX;EAAmB;CCHrB;;ADMA;;;GAAA;AAKA;EACE;EAAmC;EACnC;EAAgB;CCFlB;;ADKA;gFAAA;AAGA;;GAAA;AAIA;EACE;CCJF;;ADOA;;;GAAA;AAKA;EACE;EAAqB;EACrB;EAA4B;EAC5B;UAAA;EAAmC;CCFrC;;ADKA;;GAAA;AAIA;;EAEE;CCHF;;ADMA;;;GAAA;AAKA;;;EAGE;EAAmC;EACnC;EAAgB;CCFlB;;ADKA;;GAAA;AAIA;EACE;CCHF;;ADMA;;;GAAA;AAKA;;EAEE;EACA;EACA;EACA;CCJF;;ADOA;EACE;CCJF;;ADOA;EACE;CCJF;;ADOA;gFAAA;AAGA;;GAAA;AAIA;EACE;CCNF;;ADSA;gFAAA;AAGA;;;GAAA;AAKA;;;;;EAKE;EAAsB;EACtB;EAAiB;EACjB;EAAmB;EACnB;EAAW;CCJb;;ADOA;;;GAAA;AAKA;;EACQ;EACN;CCJF;;ADOA;;;GAAA;AAKA;;EACS;EACP;CCJF;;ADOA;;GAAA;AAIA;;;;EAIE;CCLF;;ADQA;;GAAA;AAIA;;;;EAIE;EACA;CCNF;;ADSA;;GAAA;AAIA;;;;EAIE;CCPF;;ADUA;;GAAA;AAIA;EACE;CCRF;;ADWA;;;;;GAAA;AAOA;EACE;EAAwB;EACxB;EAAgB;EAChB;EAAgB;EAChB;EAAiB;EACjB;EAAY;EACZ;EAAqB;CCHvB;;ADMA;;GAAA;AAIA;EACE;CCJF;;ADOA;;GAAA;AAIA;EACE;CCLF;;ADQA;;;GAAA;AAKA;;EAEE;EAAwB;EACxB;EAAY;CCJd;;ADOA;;GAAA;AAIA;;EAEE;CCLF;;ADQA;;;GAAA;AAKA;EACE;EAA+B;EAC/B;EAAsB;CCJxB;;ADOA;;GAAA;AAIA;EACE;CCLF;;ADQA;;;GAAA;AAKA;EACE;EAA4B;EAC5B;EAAe;CCJjB;;ADOA;gFAAA;AAGA;;GAAA;AAIA;EACE;CCNF;;ADSA;;GAAA;AAIA;EACE;CCPF;;ADUA;gFAAA;AAGA;;GAAA;AAIA;EACE;CCTF;;ADYA;;GAAA;AAIA;EACE;CCVF;;ACxUA;ECiHE;EAmCE;EACA;EDlJF,iBEKY;EFJZ,eGNK;EHOL,sOIaW;EJZX,iBEwCQ;EFvCR;CD4UF;;ACjUA;;EK+HQ;EJ3BN;EI2BM;EAAA;CN0MR;;ACnUA;;EKyHQ;EJ3BN;EI2BM;EAAA;CNkNR;;ACrUA;;EKmHQ;EJ3BN;EI2BM;EAAA;CN0NR;;ACvUA;;;;EK6GQ;EJ3BN;EI2BM;EAAA;CNoOR;;ACzUA;;;;;;;;;EASE,eGvDK;EHwDL,qEI5CS;EJ6CT,iBETQ;CHqVV;;ACtUA;EKoFQ;EJ3BN;EI2BM;EAAA;CNyPR;;ACrUA;;EK4EQ;EJ3BN;EI2BM;EAAA;CNiQR;ACxUE;;EACE;EACA;CD2UJ;ACxUE;;EACE;EACA;CD2UJ;;ACvUA;EK4DQ;EJ3BN;EI2BM;EAAA;CNkRR;AC1UE;EACE,iBEtCO;CHkXX;ACzUE;EACE;CD2UJ;;AC9TA;EKsCQ;EJ3BN;EI2BM;EAAA;ELnCN;CDmUF;;AChUA;EACE;CDmUF;;AC7TA;EACE,eG3HK;EH4HL;CDgUF;AC9TE;EACE,YG9HE;EH+HF,2BE1BoB;CH0VxB;AC7TE;EAEE;EACA,YGrIE;CJmcN;AC3TE;EACE;CD6TJ;;ACzTA;EACE;EACA,8BEpCS;EFqCT;EACA;EACA;EACA;CD4TF;;ACzTA;;EAEE;EACA;EACA;CD4TF;;ACzTA;EACE;CD4TF;;ACzTA;EACE;CD4TF;;ACzTA;EACE;CD4TF;;ACzTA;EACE,iBElHK;EFmHL,eG5KK;CJweP;;ACzTA;;;;EAIE,iBEzKY;CHqed;;ACzTA;EKnCQ;EJ3BN;EI2BM;EAAA;CNmWR;;AC5TA;EACE;EACA;EACA;EACA;CD+TF;;AC5TA;EK9CQ;EJ3BN;EI2BM;EAAA;ELgDN,0BGnMK;EHoML,YGtMO;EHuMP,iBE5IK;EG0FC;EAAA;ELqDN,kFI5KS;EJ6KT;EACA;EACA;EACA;EACA;CDkUF;;AOlhBA;EDUE;ECRA;CPqhBF;AM3gBE;;;EAGE;CN6gBJ;;AQ5hBA;EACE;EACA;EACA;EACA;EACA;EAAA;EACA;EAAA;UAAA;CR+hBF;;ASriBA;EACM;EACA;CTwiBN;;ASriBA;EACE;EACA;CTwiBF;;AU/iBA;EJsJQ;EAAA;EAAA;EAAA;EAAA;EAAA;EK1IN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;ECuJE,8BDpJiB;ECqJjB,oBDrJqD;ECsJrD,sBDtJyF;CX4iB7F;AWphBE;EACE;EC2HA,8BDzHmB;EC0HnB,oBD1HuD;EC2HvD,sBD3H2F;CXuhB/F;AWjhBE;EACE;ECkHA,8BDhHmB;ECiHnB,oBDjHuD;ECkHvD,sBDlH2F;CXohB/F;AW9gBE;EACE;ECyGA,8BDvGmB;ECwGnB,oBDxGuD;ECyGvD,sBDzG2F;CXihB/F;AW3gBE;EACE;ECgGA,8BD9FmB;EC+FnB,oBD/FuD;ECgGvD,sBDhG2F;CX8gB/F;;Aa5lBA;ECwBE;EACA;EACA;EACA;EACA;EACA;EF+IE,8BE9Ie;EF+If,oBE/IyD;EFgJzD,mBEhJmG;Cd0kBvG;AcxkBE;ERsHM;EAAA;EQvIN;EACA;EACA;EACA;EACA;EFyJE,wBExJe;EFyJf,oBEzJ8D;EF0J9D,mBE1J6G;CdgmBjH;Ac/kBI;;ERiHI;EAAA;EQvIN;EACA;EACA;EACA;EACA;EFyJE,8BExJe;EFyJf,oBEzJ8D;EF0J9D,mBE1J6G;Cd6mBjH;AcrlBI;ER0GI;EAAA;EQvIN;EACA;EACA;EACA;EACA;EFyJE,8BExJe;EFyJf,oBEzJ8D;EF0J9D,mBE1J6G;CdynBjH;Ac3lBI;ERoGI;EAAA;EQvIN;EACA;EACA;EACA;EACA;EFyJE,8BExJe;EFyJf,oBEzJ8D;EF0J9D,mBE1J6G;CdqoBjH;;AezpBA;ETsJQ;EU9HF;EACA;EAEF;ChBqoBJ;AM9mBI;EACE;EACA;EACA","file":"public/assets/css/site.css","sourcesContent":["/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n","/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=search] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n\nhtml {\n  font-size: 100%;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  line-height: 1.5;\n  color: #3c3c3c;\n  font-family: Frutiger, \"Frutiger Linotype\", Univers, Calibri, \"Gill Sans\", \"Gill Sans MT\", \"Myriad Pro\", Myriad, \"DejaVu Sans Condensed\", \"Liberation Sans\", \"Nimbus Sans L\", Tahoma, Geneva, \"Helvetica Neue\", Helvetica, sans-serif;\n  font-weight: 400;\n  text-rendering: optimizeLegibility;\n}\n\n.h1,\nh1 {\n  font-size: 4.25rem;\n  line-height: 1.0588235294;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n.h2,\nh2 {\n  font-size: 2.625rem;\n  line-height: 1.1428571429;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n.h3,\nh3 {\n  font-size: 1.625rem;\n  line-height: 1.8461538462;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n.h4,\n.h5,\nh4,\nh5 {\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-top: 1.5rem;\n  margin-bottom: 0;\n}\n\n.h1,\n.h2,\n.h4,\n.h5,\nh1,\nh2,\nh3,\nh4,\nh5 {\n  color: #3c3c3c;\n  font-family: \"Gill Sans MT\", \"Gill Sans\", Tahoma, Geneva, sans-serif;\n  font-weight: 400;\n}\n\np {\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-top: 0;\n  margin-bottom: 1.5rem;\n}\n\nol,\nul {\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-top: 0rem;\n  margin-bottom: 1.5rem;\n}\nol ol,\nul ol {\n  margin-bottom: 0;\n  margin-top: 0;\n}\nol ul,\nul ul {\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\ndl {\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-top: 0rem;\n  margin-bottom: 1.5rem;\n}\ndl dt {\n  font-weight: 600;\n}\ndl dd {\n  font-style: italic;\n}\n\nblockquote {\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-top: 0rem;\n  margin-bottom: 1.5rem;\n  font-style: italic;\n}\n\nblockquote > p {\n  padding: 0;\n}\n\na {\n  color: #3c3c3c;\n  text-decoration: none;\n}\na:hover {\n  color: #000;\n  text-decoration: underline;\n}\na:active, a:focus {\n  outline: none;\n  color: #000;\n}\np a {\n  border-bottom: 1px solid #3c3c3c;\n}\n\nhr {\n  border: 0;\n  border-top: 1px solid #96def0;\n  display: block;\n  height: 1px;\n  padding: 0;\n  margin-bottom: 1.5rem;\n}\n\nsub,\nsup {\n  position: relative;\n  top: -0.4rem;\n  vertical-align: baseline;\n}\n\nsub {\n  top: 0.4rem;\n}\n\nb {\n  line-height: 1;\n}\n\nsmall {\n  line-height: 1;\n}\n\nstrong {\n  font-weight: 700;\n  color: #3c3c3c;\n}\n\ncite,\ndfn,\nem,\nq {\n  line-height: 1.5;\n}\n\ncode {\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-top: 0rem;\n  margin-bottom: 1.5rem;\n}\n\nkbd {\n  margin-bottom: 1px;\n  padding: 0;\n  position: relative;\n  top: -1px;\n}\n\npre {\n  font-size: 1rem;\n  line-height: 1.5;\n  margin-top: 0rem;\n  margin-bottom: 1.5rem;\n  background-color: #3c3c3c;\n  color: #eee;\n  font-weight: 700;\n  padding: 0.75rem;\n  border-radius: 0.25rem;\n  font-family: Monaco, \"Lucida Sans Typewriter\", Consolas, \"Courier New\", monospace;\n  white-space: pre;\n  word-break: break-all;\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: pre\\9 ;\n}\n\nhtml {\n  box-sizing: border-box;\n  height: 100%;\n}\nhtml *,\nhtml *:after,\nhtml *:before {\n  box-sizing: inherit;\n}\n\nbody {\n  padding: 0;\n  margin: 0;\n  background-color: #eee;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\nfigure {\n  padding: 0;\n  margin: 0;\n}\n\nimg {\n  width: 100%;\n  height: auto;\n}\n\n.btn {\n  margin: 0 0 1.5rem 0;\n  padding: 0 0.5rem;\n  line-height: 2.75rem;\n  font-size: 1rem;\n  height: 2.75rem;\n  border-radius: 0;\n  font-family: inherit;\n  text-transform: uppercase;\n  display: inline-block;\n  font-weight: 600;\n  text-align: center;\n  box-sizing: content-box;\n  text-decoration: none;\n  cursor: pointer;\n  background: #96def0;\n  border-width: 2px 2px 2px 2px;\n  border-style: solid;\n  border-color: #9f9f9f;\n}\n.btn:hover {\n  background: #53c9e6;\n  border-width: 2px 2px 2px 2px;\n  border-style: solid;\n  border-color: #3c3c3c;\n}\n.btn:focus {\n  background: #3dc2e3;\n  border-width: 2px 2px 2px 2px;\n  border-style: solid;\n  border-color: #3c3c3c;\n}\n.btn:active {\n  background: #69d0ea;\n  border-width: 2px 2px 2px 2px;\n  border-style: solid;\n  border-color: #3c3c3c;\n}\n.btn:disabled {\n  background: #69d0ea;\n  border-width: 2px 2px 2px 2px;\n  border-style: solid;\n  border-color: #3c3c3c;\n}\n\n.table {\n  font-family: Frutiger, \"Frutiger Linotype\", Univers, Calibri, \"Gill Sans\", \"Gill Sans MT\", \"Myriad Pro\", Myriad, \"DejaVu Sans Condensed\", \"Liberation Sans\", \"Nimbus Sans L\", Tahoma, Geneva, \"Helvetica Neue\", Helvetica, sans-serif;\n  table-layout: fixed;\n  border-collapse: collapse;\n  width: 100%;\n  margin: 24px 0 24px 0;\n  background-color: #fff;\n  border-width: 2px 2px 2px 2px;\n  border-style: solid;\n  border-color: #000;\n}\n.table caption {\n  padding: 1.5rem 0;\n  font-size: 1.375rem;\n  background: #fff;\n  font-family: inherit;\n  font-weight: 700;\n  color: #3c3c3c;\n  text-align: center;\n  border-width: 0 0 1px 0;\n  border-style: solid;\n  border-color: #eee;\n}\n.table thead td,\n.table thead th {\n  padding: 1rem 0;\n  font-size: 1rem;\n  background: #eee;\n  font-family: inherit;\n  font-weight: 400;\n  color: #3c3c3c;\n  text-align: center;\n  border-width: 1px 1px 1px 1px;\n  border-style: solid;\n  border-color: #fff;\n}\n.table tbody td {\n  padding: 0.5rem 0;\n  font-size: 1rem;\n  background: #eee;\n  font-family: inherit;\n  font-weight: 400;\n  color: #3c3c3c;\n  text-align: center;\n  border-width: 1px 1px 1px 1px;\n  border-style: solid;\n  border-color: #fff;\n}\n.table tfoot td {\n  padding: 0.5rem 0;\n  font-size: 1rem;\n  background: #eee;\n  font-family: inherit;\n  font-weight: 400;\n  color: #3c3c3c;\n  text-align: center;\n  border-width: 1px 1px 1px 1px;\n  border-style: solid;\n  border-color: #fff;\n}\n\n.container {\n  max-width: 71.25rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 96%;\n}\n.container:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}","// ======================================================================\n// 04-elements - Typography\n// ======================================================================\n\n\n// ======================================================================\n// HTML\n// ======================================================================\n\nhtml {\n  @include rem-baseline(100%);\n  @include font-smoothing(on);\n  line-height: $line-height;\n  color: $font-color;\n  font-family: $font-stack;\n  font-weight: $font-weight;\n  text-rendering: optimizeLegibility;\n}\n\nbody {\n  @include baseline;\n}\n\n// ======================================================================\n// Headings\n// ======================================================================\n\n.h1,\nh1 {\n  // @include type-modular(delta, 0px, 36px);\n  @include type-free(68px, 24px, 24px, 72px, true);\n}\n\n.h2,\nh2 {\n  // @include type-modular(delta, 0px, 12px);\n  @include type-free(42px, 24px, 24px, 48px, true);\n}\n\n.h3,\nh3 {\n  // @include type-modular(epsilon, 0px, 0px );\n  @include type-free(26px, 24px, 24px, 48px, true);\n}\n\n.h4,\n.h5,\nh4,\nh5 {\n  // @include type-modular(epsilon, 0px, 0px );\n  @include type-free(16px, 24px, 0, 24px, true);\n}\n\n.h1,\n.h2,\n.h4,\n.h5,\nh1,\nh2,\nh3,\nh4,\nh5 {\n  color: $heading-color;\n  font-family: $heading-stack;\n  font-weight: $heading-weight;\n}\n// ======================================================================\n// Paragraphs\n// ======================================================================\n\np {\n  // @include type-modular(zeta, 0px, 24px);\n  @include type-free($base-font-size, 0, 24px, 24px, true);\n}\n// ======================================================================\n// Lists\n// ======================================================================\n\nol,\nul {\n  // @include type-modular(zeta);\n  @include type-free($base-font-size, 0px, 24px, 24px, true);\n\n  ol {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n\n  ul {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n}\n\ndl {\n  // @include type-modular(zeta);\n  @include type-free($base-font-size, 0px, 24px, 24px, true);\n\n  dt {\n    font-weight: $semibold;\n  }\n\n  dd {\n    font-style: italic;\n  }\n}\n// ======================================================================\n// Tables\n// ======================================================================\n// table {\n//   @include table($default-table);\n// }\n// ======================================================================\n// Quotes\n// ======================================================================\n\nblockquote {\n  // @include type-modular(zeta);\n  @include type-free($base-font-size, 0px, 24px, 24px, true);\n  font-style: italic;\n}\n\nblockquote > p {\n  padding: 0;\n}\n// ======================================================================\n// Misc\n// ======================================================================\n\na {\n  color: $link;\n  text-decoration: none;\n\n  &:hover {\n    color: $link-hover;\n    text-decoration: $link-hover-decoration;\n  }\n\n  &:active,\n  &:focus {\n    outline: none;\n    color: $link-hover;\n  }\n\n  p & {\n    border-bottom: 1px solid $dark;\n  }\n}\n\nhr {\n  border: 0;\n  border-top: $hr-style;\n  display: block;\n  height: 1px;\n  padding: 0;\n  margin-bottom: rem(24px);\n}\n\nsub,\nsup {\n  position: relative;\n  top: -0.4rem;\n  vertical-align: baseline;\n}\n\nsub {\n  top: 0.4rem;\n}\n\nb {\n  line-height: 1;\n}\n\nsmall {\n  line-height: 1;\n}\n\nstrong {\n  font-weight: $bold;\n  color: $dark;\n}\n\ncite,\ndfn,\nem,\nq {\n  line-height: $line-height;\n}\n\ncode {\n  @include type-free($base-font-size, 0px, 24px, 24px, true);\n}\n\nkbd {\n  margin-bottom: 1px;\n  padding: 0;\n  position: relative;\n  top: -1px;\n}\n\npre {\n  @include type-free($base-font-size, 0px, 24px, 24px, true);\n  background-color: $dark;\n  color: $bright;\n  font-weight: $bold;\n  @include rem(padding, 12px);\n  @include rem(border-radius, 4px);\n  font-family: $terminal;\n  white-space: pre;\n  word-break: break-all;\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: pre\\9;\n}\n","// ======================================================================\n// Slate Framework <hello@slateengine.com>\n// ======================================================================\n//\n// ======================================================================\n// Typekit Helpers\n// ======================================================================\n\n$modular-scale-alpha: type-setting($base-font-size, $type-ratio, $modular-step-alpha);\n$modular-scale-beta: type-setting($base-font-size, $type-ratio, $modular-step-beta);\n$modular-scale-gamma: type-setting($base-font-size, $type-ratio, $modular-step-gamma);\n$modular-scale-delta: type-setting($base-font-size, $type-ratio, $modular-step-delta);\n$modular-scale-epsilon: type-setting($base-font-size, $type-ratio, $modular-step-epsilon);\n$modular-scale-zeta: type-setting($base-font-size, $type-ratio, $modular-step-zeta);\n$modular-scale-eta: type-setting($base-font-size, $type-ratio, $modular-step-eta);\n$modular-scale-theta: type-setting($base-font-size, $type-ratio, $modular-step-theta);\n$modular-scale-iota: type-setting($base-font-size, $type-ratio, $modular-step-iota);\n\n$lineheight-alpha: $modular-scale-alpha * $line-height;\n$lineheight-beta: $modular-scale-beta * $line-height;\n$lineheight-gamma: $modular-scale-gamma * $line-height;\n$lineheight-delta: $modular-scale-delta * $line-height;\n$lineheight-epsilon: $modular-scale-epsilon * $line-height;\n$lineheight-zeta: $modular-scale-zeta * $line-height;\n$lineheight-eta: $modular-scale-eta * $line-height;\n$lineheight-theta: $modular-scale-theta * $line-height;\n$lineheight-iota: $modular-scale-iota * $line-height;\n\n// Map of modular font scales\n// @group Typography\n$type-scale: ( alpha: $modular-scale-alpha, beta: $modular-scale-beta, gamma: $modular-scale-gamma, delta: $modular-scale-delta, epsilon: $modular-scale-epsilon, zeta: $modular-scale-zeta, eta: $modular-scale-eta, theta: $modular-scale-theta, iota: $modular-scale-iota );\n\n// Map of line heights\n// @group Typography\n$line-heights: ( alpha: $lineheight-alpha, beta: $lineheight-beta, gamma: $lineheight-gamma, delta: $lineheight-delta, epsilon: $lineheight-epsilon, zeta: $lineheight-zeta, eta: $lineheight-eta, theta: $lineheight-theta, iota: $lineheight-iota );\n\n/// Modular type mixin lets you easily generate a font size on an element with lineheights and margins based on a modular scale.\n/// @example scss - Modular Type\n///     p {\n///       @include type-modular(gamma, 24px, 24px, 24px, true )\n///     }\n/// @param {string} $type-scale - Desired modular scale\n/// @param {string} $type-scale-vtspace - Desired margin above element (optional)\n/// @param {string} $type-scale-vbspace - Desired margin below element (optional)\n/// @param {string} $tflh - Overide line-height. Use pixel values, they will be converted. (optional)\n/// @param {string} $tfuline - Generate unitless lineheights. (optional)\n/// @group Typography\n\n@mixin type-modular($type-scale, $type-scale-vtspace: $base-font-size * $line-height, $type-scale-vbspace: $base-font-size * $line-height, $mlh: line-height($type-scale), $muline: $unitless-lineheight) {\n  @include rem(font-size, type-scale($type-scale));\n  @if $muline == true {\n    @include unitless-line-height(type-scale($type-scale), $mlh);\n  } @else {\n    @include rem(line-height, $mlh);\n  }\n  @include rem(margin-top, $type-scale-vtspace);\n  @include rem(margin-bottom, $type-scale-vbspace);\n}\n\n/// Free type mixin lets you easily generate a font size on an element with lineheights and margins based on a pixel value.\n/// @example scss - Free Type\n///     p {\n///       @include type-free(16px, 24px, 24px, 24px, true)\n///     }\n/// @param {string} $type-size - Desired font size in pixels\n/// @param {string} $type-scale-vtspace - Desired margin above element (optional)\n/// @param {string} $type-scale-vbspace - Desired margin below element (optional)\n/// @param {string} $tflh - Overide line-height. Use pixel values, they will be converted. (optional)\n/// @param {string} $tfuline - Generate unitless lineheights. (optional)\n/// @group Typography\n\n@mixin type-free($type-size, $type-scale-vtspace, $type-scale-vbspace, $tflh: $line-height, $tfuline: $unitless-lineheight) {\n  @include rem(font-size, $type-size);\n  @if $tfuline == true {\n    @include unitless-line-height($type-size, $tflh);\n  } @else {\n    @include rem(line-height, $tflh);\n  }\n  @include rem(margin-top, $type-scale-vtspace);\n  @include rem(margin-bottom, $type-scale-vbspace);\n}\n\n/// Font face mixin lets you very easily add custom fonts in multiple formats.\n/// @example scss - Fontface\n///     @include fontface(\"IM FELL English\", \"IMFeENrm28P\", $extrabold, normal, $formats: eot woff woff2 ttf svg);\n///\n///     .custom-font {\n///       font-family: \"IM FELL English\";\n///     }\n/// @param {string} $font-family - The fonts name eg \"IM FELL English\"\n/// @param {string} $font-name - The fonts filename without the extension \"IMFeENrm28P\"\n/// @param {string} $weight [normal] - Font weight\n/// @param {string} $style [normal] - Font style\n/// @param {string} $formats - List of font file types to use\n/// @group Typography\n\n@mixin fontface($font-family, $font-name, $weight: normal, $style: normal, $formats: eot woff ttf svg) {\n  @if index('italic' 'oblique', $weight) {\n    $style: $weight;\n    $weight: normal;\n  }\n  @font-face {\n    font-family: $font-family;\n    font-weight: $weight;\n    font-style: $style;\n    @if index($formats, eot) {\n      src: url('#{$custom-font-path}#{$font-name}.eot');\n    }\n    src: fontsrc($formats, $font-name, $font-family);\n  }\n}\n\n\n\n/// REM Baseline\n/// @example scss - Free Type\n///     .yourelement {\n///       @include rem-baseline;\n///     }\n/// @param {number} $zoom - zoom amount\n/// @group Type Kit\n@mixin rem-baseline($zoom: 100%) {\n  font-size: ($zoom / 16px) * $base-font-size;\n}\n\n// unitless line height mixin\n@mixin unitless-line-height($font-size, $line-height: $line-height) {\n  line-height: unitless-line-height($font-size, $line-height);\n}\n\n/// Draw Baselines to help with setting typography.\n/// @example scss - lines\n///     .yourelement {\n///       @include lines($base-font-size, $line-height);\n///     }\n/// @param {number} $line-font-size - Overide the font size used to calculate the lines\n/// @param {number} $line-line-height - Overide the lineheight used to calculate the lines\n/// @group Type Kit\n@mixin baseline($line-font-size: $base-font-size, $line-line-height: $line-height) {\n  $bsize: ($line-font-size * $line-line-height);\n  @if($type-debug == true) {\n    background-size: rem($bsize $bsize);\n    background-image: linear-gradient(to bottom, hsla(200, 100%, 50%, .3) 1px, transparent 1px);\n    background-position: left -1px;\n    background-repeat: repeat;\n  }\n}\n\n/// Font Smoothing\n/// @example scss - Font Smoothing\n///     .yourelement {\n///       @include font-smoothing(on);\n///     }\n/// @param {number} $zoom - zoom amount\n/// @group Type Kit\n@mixin font-smoothing($value: on) {\n  @if $value == on {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  } @else {\n    -webkit-font-smoothing: subpixel-antialiased;\n    -moz-osx-font-smoothing: auto;\n  }\n}\n","// ======================================================================\n// Slate Type Config | hello@hashandsalt.com\n// ======================================================================\n\n// Basic Setup\n// ======================================================================\n\n// Enable Type Debug\n$type-debug: false;\n\n// Basic Setup\n// ======================================================================\n\n// Set Global Font size\n$base-font-size: $rem-base;\n\n// Set Global Line height\n$line-height: 1.5;\n\n// Set Global line-heights with no units\n$unitless-lineheight: true;\n\n// The ratio used to generate sizes and margins on heading tags\n$type-ratio: $perfect-fourth;\n\n// Global Font Smoothing\n$webkit-smoothing: antialiased;\n\n// Modular Steps\n// ======================================================================\n\n// Modular Stepping Multipliers\n$modular-step-alpha: 5;\n$modular-step-beta: 4;\n$modular-step-gamma: 3;\n$modular-step-delta: 2;\n$modular-step-epsilon: 1;\n$modular-step-zeta: 0;\n$modular-step-eta: -1;\n$modular-step-theta: -2;\n$modular-step-iota: -3;\n\n// Font Weights\n// ======================================================================\n\n// Thin\n$thin: 100;\n\n// Extra light\n$extralight: 200;\n\n// Light\n$light: 300;\n\n// Regular\n$regular: 400;\n\n// Medium\n$medium: 500;\n\n// Semibold\n$semibold: 600;\n\n// Bold\n$bold: 700;\n\n// Extra Bold\n$extra-bold: 800;\n\n// Black\n$black: 900;\n\n// Global font styles\n// ======================================================================\n\n// Global Font Stack\n$font-stack: $shelvetica;\n\n// Global Font Weight\n$font-weight: $regular;\n\n// Global Font Color\n$font-color: $dark;\n\n// Global heading font styles\n// ======================================================================\n\n// Heading Font Stack\n$heading-stack: $gillsans;\n\n// Heading Font Color\n$heading-weight: $regular;\n\n// Heading Font Weight\n$heading-color: $dark;\n\n// Custom Font Path\n$custom-font-path: '/assets/fonts/';\n\n// Links\n// ======================================================================\n\n// Link Color\n$link: $dark;\n\n// Link Hover Color\n$link-hover: $jet;\n\n// Link Hover Color\n$link-hover-decoration: underline;\n\n// Horizontal Rules\n// ======================================================================\n\n// Horizontal Rule color and thickness\n$hr-style: 1px solid $primary;\n","// ======================================================================\n// Slate Colors | hello@hashandsalt.com\n// ======================================================================\n\n// Basic\n$bright: #eee;\n$gray: #9f9f9f;\n$dark: #3c3c3c;\n$jet: #000;\n\n// Pallette\n$primary: #96def0;\n$secondary: #2980b9;\n$tertiary: #8e44ad;\n\n// Feedback\n$positive: #2ecc71;\n$negative: #971318;\n$warning: #f39c12;\n$disabled: #adadad;\n\n// Gradients\n$gradient-start: $primary;\n$gradient-middle: darken($primary, 20%);\n$gradient-end: darken($primary, 40%);\n","// ======================================================================\n// Slate Type Stacks Config | hello@hashandsalt.com\n// ======================================================================\n\n// Simple Times Font Stack\n$times: Times, 'Times New Roman', serif;\n// Simple Arial Font Stack\n$arial: Arial, sans-serif;\n// Simple Georgia Font Stack\n$georgia: Georgia, serif;\n// Simple Garamond Font Stack\n$garamond: 'Apple Garamond', 'ITC Garamond Narrow', 'Garamond', serif;\n// Simple Helvetica Font Stack\n$helvetica: 'Helvetica Neue', Helvetica, sans-serif;\n// Simple Verdana Font Stack\n$verdana: 'Verdana Ref', Verdana, sans-serif;\n// Simple Trebuchet Font Stack\n$trebuchet: 'Trebuchet MS', sans-serif;\n// Simple Gill Sans Font Stack\n$gillsans: 'Gill Sans MT', 'Gill Sans', Tahoma, Geneva, sans-serif;\n// Full Times Font Stack\n$stimes: Cambria, 'Hoefler Text', Utopia, 'Liberation Serif', 'Nimbus Roman No9 L Regular', 'Times New Roman', Times, serif;\n// Full Georgia Font Stack\n$sgeorgia: Constantia, 'Lucida Bright', Lucidabright, 'Lucida Serif', Lucida, 'DejaVu Serif', 'Bitstream Vera Serif', 'Liberation Serif', Georgia, serif;\n// Full Garamond Font Stack\n$sgaramond: 'Palatino Linotype', Palatino, Palladio, 'URW Palladio L', 'Book Antiqua', Baskerville, 'Bookman Old Style', 'Bitstream Charter', 'Nimbus Roman No9 L', 'Apple Garamond', 'ITC Garamond Narrow', 'New Century Schoolbook', 'Century Schoolbook', 'Century Schoolbook L', Garamond, serif;\n// Full Helvetica Font Stack\n$shelvetica: Frutiger, 'Frutiger Linotype', Univers, Calibri, 'Gill Sans', 'Gill Sans MT', 'Myriad Pro', Myriad, 'DejaVu Sans Condensed', 'Liberation Sans', 'Nimbus Sans L', Tahoma, Geneva, 'Helvetica Neue', Helvetica, sans-serif;\n// Full Verdana Font Stack\n$sverdana: Corbel, 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'DejaVu Sans', 'Bitstream Vera Sans', 'Liberation Sans', 'Verdana Ref', Verdana, sans-serif;\n// Full Trebuchet Font Stack\n$strebuchet: 'Segoe UI', Candara, 'Bitstream Vera Sans', 'DejaVu Sans', 'Bitstream Vera Sans', 'Trebuchet MS', Trebuchet, sans-serif;\n// Full Gill Sans Font Stack\n$sgillsans: Frutiger, 'Frutiger Linotype', Univers, Calibri, 'Myriad Pro', Myriad, 'DejaVu Sans Condensed', 'Liberation Sans', 'Nimbus Sans L', Tahoma, Geneva, 'Gill Sans MT', 'Gill Sans', sans-serif;\n// Terminal / Monospace font\n$terminal: Monaco, 'Lucida Sans Typewriter', Consolas, 'Courier New', monospace;\n","// ======================================================================\n// Slate Framework <hello@slateengine.com>\n// ======================================================================\n//\n// ======================================================================\n// Helpers\n// ======================================================================\n/// Fix stupid box model in stupid browsers.\n/// @example scss\n/// html {\n///     @include fix-box-model;\n/// }\n/// @group Helpers\n@mixin fix-box-model {\n  box-sizing: border-box;\n\n  *,\n  *:after,\n  *:before {\n    box-sizing: inherit;\n  }\n}\n/// Multiple Clearfixes in one mixin! Use modern, PIE or Mojo Clearfixes, depending on your needs.\n/// @example scss - Clearfix\n/// .yourelement {\n///   @include clearfix(modern);\n///   @include clearfix(pie);\n///   @include clearfix(mojo);\n///      ...\n/// }\n/// @link http://www.positioniseverything.net/easyclearing.html\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n/// @param {string} $fix-type [modern] - Desired CSS property\n/// @group Clearfix\n@mixin clearfix($fix-type: \"modern\") {\n  // Moden clearfix.\n  @if $fix-type == \"modern\" {\n    overflow: hidden;\n  }\n  // Position is everything clearfix clearfix.\n  @if $fix-type == \"pie\" {\n    *zoom: 1;\n\n    &:after {\n      content: \"\\0020\";\n      display: block;\n      height: 0;\n      clear: both;\n      overflow: hidden;\n      visibility: hidden;\n    }\n  }\n  // Mojo Clearfix.\n  @if $fix-type == \"mojo\" {\n    &:after {\n      content: \"\";\n      display: table;\n      clear: both;\n    }\n  }\n}\n/// iFrame / Object / Emded helper to make those elements responsive. Works a treat on things like google maps and youtube videos.\n/// Apply this to the PARENT element, not the iframe.\n/// @example scss - IOE\n/// .yourelement {\n///   @include ioe;\n///      ...\n/// }\n/// @group Media\n@mixin ioe {\n  height: 0;\n  padding-bottom: to-percentage($ioe-padding);\n  position: relative;\n\n  canvas,\n  embed,\n  iframe,\n  object,\n  video {\n    border: 0;\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    user-select: none;\n    width: 100%;\n  }\n}\n// Min-Width Media Query Mixin\n/// @example scss\n///     @include break(sm) {\n/// display: block;\n/// }\n/// @group Helpers\n@mixin minbreak($size: 640px) {\n  @media screen and (min-width: rem-convert(px, $size)) {\n    @content;\n  }\n}\n/// Max-Width Media Query Mixin\n/// @example scss\n///     @include break(sm) {\n/// display: block;\n/// }\n/// @group Helpers\n@mixin maxbreak($size: 640px) {\n  @media screen and (max-width: rem-convert(px, $size)) {\n    @content;\n  }\n}\n/// Retina Media Query Mixin\n/// @example scss\n///     @include retina {\n///     ...\n/// }\n/// @group Helpers\n@mixin retina {\n  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2 / 1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {\n    @content;\n  }\n}\n/// Print Mixin\n/// @example scss\n///     @include print {\n///     ...\n/// }\n/// @group Helpers\n@mixin print {\n  @media print {\n    @content;\n  }\n}\n/// REM Calculator. Generate REM sizes from a pixel value on almost any css property\n/// @example scss - Free Type\n///     .yourelement {\n///       @include rem(margin-top, 16px);\n///     }\n///     .yourelement {\n///       @include rem(margin, 16px 20px 16px 20px);\n///     }\n/// @param {string} $properties - Desired CSS property\n/// @param {number} $values - Desired values to convert\n/// @group Helpers\n@mixin rem($properties, $values...) {\n  @if type-of($properties) == \"map\" {\n    @each $property in map-keys($properties) {\n      @include rem($property, map-get($properties, $property));\n    }\n  } @else {\n    @each $property in $properties {\n      @if $rem-fallback or $rem-px-only {\n        #{$property}: rem-convert(px, $values...);\n      }\n      @if not $rem-px-only {\n        #{$property}: rem-convert(rem, $values...);\n      }\n    }\n  }\n}\n","// ======================================================================\n// 04-elements - HTML\n// ======================================================================\n\nhtml {\n  @include fix-box-model;\n  height: 100%;\n}\n","// ======================================================================\n// 04-elements - Body\n// ======================================================================\n\nbody {\n  padding: 0;\n  margin: 0;\n  background-color: #eee;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n","// ======================================================================\n// 04-elements - Media\n// ======================================================================\n\nfigure {\n      padding: 0;\n      margin: 0;\n}\n\nimg {\n  width: 100%;\n  height: auto;\n}\n","// ======================================================================\n// 04-elements - Buttons\n// ======================================================================\n\n.btn {\n  @include button;\n}\n","// ======================================================================\n// Slate Framework <hello@slateengine.com>\n// ======================================================================\n//\n// ======================================================================\n// Slate Buttons\n// ======================================================================\n\n\n@mixin buttonbase($map-name: $button-default) {\n  @include rem(margin, map-get($map-name, 'margin'));\n  @include rem(padding, map-get($map-name, 'padding'));\n  @include rem(line-height, map-get($map-name, 'height'));\n  @include rem(font-size, map-get($map-name, 'font-size'));\n  @include rem(height, map-get($map-name, 'height'));\n  @include rem(border-radius, map-get($map-name, 'rounded'));\n  font-family: map-get($map-name, 'font-family');\n  text-transform: map-get($map-name, 'text-transform');\n  display: map-get($map-name, 'display');\n  font-weight: map-get($map-name, 'textweight');\n  text-align: map-get($map-name, 'textalign');\n  box-sizing: map-get($map-name, 'boxsizing');\n  text-decoration: none;\n  cursor: pointer;\n  // Background Color\n  background: map-get($map-name, default);\n  // Borders\n  @if map-get($map-name, use-borders) == true {\n    @include borders(map-get($map-name, 'border-width'), map-get($map-name, 'border-style'), map-get($map-name, 'border-color'));\n  } @else {\n    border: 0;\n  }\n}\n\n\n/// Button mixin lets you quickly make flat ui style buttons consistently accross all types of buttons (input, button and anchor).\n/// @example scss - Default Button using default sass map\n/// .button {\n///     @include button;\n/// }\n/// @example scss - Custom Button using custom sass map\n/// .button {\n///     @include button($my-map);\n/// }\n/// @author Hash&Salt\n/// @param {Variable} $map-name [$button-default] - Skin variable to use for the button.\n/// @group Buttons\n\n@mixin button($map-name: $button-default) {\n  // Base Button Style\n  @include buttonbase($map-name);\n\n  &:hover {\n    background: map-get($map-name, hover);\n    @if map-get($map-name, use-borders) == true {\n      @include borders(map-get($map-name, 'border-width'), map-get($map-name, 'border-style'), map-get($map-name, 'border-hover-color'));\n    } @else {\n      border: 0;\n    }\n  }\n\n  &:focus {\n    background: map-get($map-name, focus);\n    @if map-get($map-name, use-borders) == true {\n      @include borders(map-get($map-name, 'border-width'), map-get($map-name, 'border-style'), map-get($map-name, 'border-hover-color'));\n    } @else {\n      border: 0;\n    }\n  }\n\n  &:active {\n    background: map-get($map-name, active);\n    @if map-get($map-name, use-borders) == true {\n      @include borders(map-get($map-name, 'border-width'), map-get($map-name, 'border-style'), map-get($map-name, 'border-hover-color'));\n    } @else {\n      border: 0;\n    }\n  }\n\n  &:disabled {\n    background: map-get($map-name, active);\n    @if map-get($map-name, use-borders) == true {\n      @include borders(map-get($map-name, 'border-width'), map-get($map-name, 'border-style'), map-get($map-name, 'border-hover-color'));\n    } @else {\n      border: 0;\n    }\n  }\n}\n\n\n/// Gradient button mixin lets you quickly make gradient buttons consistently accross all types of buttons (input, button and anchor).\n/// @example scss - Default Gradient button using default gradient color map\n/// .button {\n///     @include button-gradient;\n/// }\n/// @example scss - Custom gradient button using custom color map\n/// .button {\n///     @include button-gradient($my-map);\n/// }\n/// @param {Variable} $map-name [$button-gradient] - Skin variable to use for the gradient button.\n/// @group Buttons\n@mixin button-gradient($map-name: $button-gradient) {\n  // Gradient Button Style\n  // Base Button Style\n  @include buttonbase($map-name);\n  @include lightness(map-get($map-name, 'start-color'), map-get($map-name, 'textlight'), map-get($map-name, 'textdark'));\n  @if map-get($map-name, 'use-borders') == true {\n    @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-color'));\n  } @else {\n    border: 0;\n  }\n  // Left to right\n  @if map-get($map-name, mode) == 'ltr' {\n    @include gradient-horizontal(map-get($map-name, start-color), map-get($map-name, end-color), map-get($map-name, start-pos), map-get($map-name, end-pos));\n\n    &:hover {\n      @include gradient-horizontal(map-get($map-name, start-color-hover), map-get($map-name, end-color-hover), map-get($map-name, start-pos), map-get($map-name, end-pos));\n      @include lightness(map-get($map-name, 'start-color'), map-get($map-name, 'textlight'), map-get($map-name, 'textdark'));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-hover-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:focus {\n      @include gradient-horizontal(map-get($map-name, start-color-focus), map-get($map-name, end-color-focus), map-get($map-name, start-pos), map-get($map-name, end-pos));\n      outline: none;\n      @include lightness(map-get($map-name, 'start-color'), map-get($map-name, 'textlight'), map-get($map-name, 'textdark'));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-focus-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:active {\n      @include gradient-horizontal(map-get($map-name, start-color-hover), map-get($map-name, end-color-hover), map-get($map-name, start-pos), map-get($map-name, end-pos));\n      @include lightness(map-get($map-name, 'start-color'), map-get($map-name, 'textlight'), map-get($map-name, 'textdark'));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-active-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:disabled {\n      @include gradient-horizontal(map-get($map-name, start-color-disabled), map-get($map-name, end-color-disabled));\n      @include lightness(map-get($map-name, 'start-color'), map-get($map-name, 'textlight'), map-get($map-name, 'textdark'));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-disabled-color'));\n      } @else {\n        border: 0;\n      }\n    }\n  }\n\n  @if map-get($map-name, mode) == 'ttb' {\n    @include gradient-vertical(map-get($map-name, start-color), map-get($map-name, end-color), map-get($map-name, start-pos), map-get($map-name, end-pos));\n    @include lightness(map-get($map-name, 'start-color'), map-get($map-name, 'textlight'), map-get($map-name, 'textdark'));\n\n    &:hover {\n      @include gradient-vertical(map-get($map-name, start-color-hover), map-get($map-name, end-color-hover), map-get($map-name, start-pos), map-get($map-name, end-pos));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-hover-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:focus {\n      outline: none;\n      @include gradient-vertical(map-get($map-name, start-color-hover), map-get($map-name, end-color-hover), map-get($map-name, start-pos), map-get($map-name, end-pos));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-focus-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:active {\n      @include gradient-vertical(map-get($map-name, start-color-hover), map-get($map-name, end-color-hover), map-get($map-name, start-pos), map-get($map-name, end-pos));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-active-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:disabled {\n      @include gradient-vertical(map-get($map-name, start-color-disabled), map-get($map-name, end-color-disabled));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-disabled-color'));\n      } @else {\n        border: 0;\n      }\n    }\n  }\n\n  @if map-get($map-name, mode) == 'rad' {\n    @include gradient-radial(map-get($map-name, start-color), map-get($map-name, end-color));\n    @include lightness(map-get($map-name, 'start-color'), map-get($map-name, 'textlight'), map-get($map-name, 'textdark'));\n\n    &:hover {\n      @include gradient-radial(map-get($map-name, start-color-hover), map-get($map-name, end-color-hover));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-hover-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:focus {\n      outline: none;\n      @include gradient-radial(map-get($map-name, start-color-focus), map-get($map-name, end-color-focus));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-focus-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:active {\n      @include gradient-radial(map-get($map-name, start-color-active), map-get($map-name, end-color-active));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-active-color'));\n      } @else {\n        border: 0;\n      }\n    }\n\n    &:disabled {\n      @include gradient-radial(map-get($map-name, start-color-disabled), map-get($map-name, end-color-disabled));\n      @if map-get($map-name, 'use-borders') == true {\n        @include borders(map-get($map-name, 'border-width'), map-deep-get($map-name, 'border-style'), map-deep-get($map-name, 'border-disabled-color'));\n      } @else {\n        border: 0;\n      }\n    }\n  }\n}\n","// ======================================================================\n// Slate Framework <hello@slateengine.com>\n// ======================================================================\n//\n// ======================================================================\n// Utility Functions\n// ======================================================================\n\n@mixin ios {\n  @supports (-webkit-overflow-scrolling: touch) {\n    @content;\n  }\n}\n\n// Deep Map Get\n// ======================================================================\n\n/// Map deep get\n/// @author Hugo Giraudel\n/// @param {Map} $map - Map\n/// @param {Arglist} $keys - Key chain\n/// @return {*} - Desired value\n@function map-deep-get($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n/// Update a key deeply nested\n/// @author Hugo Giraudel\n/// @param {Map} $map - Map to update\n/// @param {Arglist} $keys - Keys to access to value to update\n/// @param {*} $value - New value (last member of `$keys`)\n/// @return {Map} - Updated map\n@function map-deep-set($map, $keys.../*, $value */) {\n  $map-list: ($map,);\n  $result: null;\n\n  @if length($keys) == 2 {\n    @return map-merge($map, (nth($keys, 1): nth($keys, -1)));\n  }\n\n  @for $i from 1 through length($keys) - 2 {\n    $map-list: append($map-list, map-get(nth($map-list, -1), nth($keys, $i)));\n  }\n\n  @for $i from length($map-list) through 1 {\n    $result: map-merge(nth($map-list, $i), (nth($keys, $i): if($i == length($map-list), nth($keys, -1), $result)));\n  }\n\n  @return $result;\n}\n\n/// Compute the maximum depth of a map\n/// @param {Map} $map\n/// @return {Number} max depth of `$map`\n@function map-depth($map) {\n  $level: 1;\n\n  @each $key, $value in $map {\n    @if type-of($value) == \"map\" {\n      $level: max(map-depth($value) + 1, $level);\n    }\n  }\n\n  @return $level;\n}\n\n/// Test if map got all `$keys` at first level\n/// @author Hugo Giraudel\n/// @param {Map} $map - Map\n/// @param {Arglist} $keys - Keys to test\n/// @return {Bool}\n@function map-has-keys($map, $keys...) {\n  @each $key in $keys {\n    @if not map-has-key($map, $key) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n/// Test if map got all `$keys` nested with each others\n/// @author Hugo Giraudel\n/// @param {Map} $map - Map\n/// @param {Arglist} $keys - Keys to test\n/// @return {Bool}\n@function map-has-nested-keys($map, $keys...) {\n  @each $key in $keys {\n    @if not map-has-key($map, $key) {\n      @return false;\n    }\n    $map: map-get($map, $key);\n  }\n\n  @return true;\n}\n\n/// An equivalent of `zip` function but for maps.\n/// Takes two lists, the first for keys, second for values.\n/// @param {List} $keys - Keys for map\n/// @param {List} $values - Values for map\n/// @return {Map} Freshly created map\n/// @see http://sass-lang.com/documentation/Sass/Script/Functions.html#zip-instance_method\n@function map-zip($keys, $values) {\n  $l-keys: length($keys);\n  $l-values: length($values);\n  $min: min($l-keys, $l-values);\n  $map: ();\n\n  @if $l-keys != $l-values {\n    @warn \"There are #{$l-keys} key(s) for #{$l-values} value(s) in the map for `map-zip`. \"\n        + \"Resulting map will only have #{$min} pairs.\";\n  }\n\n  @if $min == 0 {\n    @return $map;\n  }\n\n  @for $i from 1 through $min {\n    $map: map-merge($map, (nth($keys, $i): nth($values, $i)));\n  }\n\n  @return $map;\n}\n\n/// jQuery-style extend function\n/// About `map-merge()`:\n/// * only takes 2 arguments\n/// * is not recursive\n/// @param {Map} $map - first map\n/// @param {ArgList} $maps - other maps\n/// @param {Bool} $deep - recursive mode\n/// @return {Map}\n\n@function map-extend($map, $maps.../*, $deep */) {\n  $last: nth($maps, -1);\n  $deep: $last == true;\n  $max: if($deep, length($maps) - 1, length($maps));\n\n  // Loop through all maps in $maps...\n  @for $i from 1 through $max {\n    // Store current map\n    $current: nth($maps, $i);\n\n    // If not in deep mode, simply merge current map with map\n    @if not $deep {\n      $map: map-merge($map, $current);\n    } @else {\n      // If in deep mode, loop through all tuples in current map\n      @each $key, $value in $current {\n\n        // If value is a nested map and same key from map is a nested map as well\n        @if type-of($value) == \"map\" and type-of(map-get($map, $key)) == \"map\" {\n          // Recursive extend\n          $value: map-extend(map-get($map, $key), $value, true);\n        }\n\n        // Merge current tuple with map\n        $map: map-merge($map, ($key: $value));\n      }\n    }\n  }\n\n  @return $map;\n}\n\n// Lightness\n@mixin lightness($bgcolor, $lightcolor, $darkcolor, $diff: 50) {\n  color: colorcompare($bgcolor, $lightcolor, $darkcolor, $diff);\n}\n\n// Borders\n@mixin borders($width, $style, $color) {\n    border-width: $width;\n    border-style: $style;\n    border-color: $color;\n}\n\n// Switch Color light / dark based on background contrast\n// ======================================================================\n@function colorcompare($bgcolor, $lightcolor: $bright, $darkcolor: $dark, $diff, ) {\n  @if (lightness($bgcolor) > $diff) {\n    @return $darkcolor; // Lighter backgorund, return dark color\n  } @else {\n    @return $lightcolor; // Darker background, return light color\n  }\n}\n","// ======================================================================\n// 04-elements - Table\n// ======================================================================\n\n.table {\n  @include table();\n}\n","// ======================================================================\n// Slate Framework <hello@slateengine.com>\n// ======================================================================\n//\n// ======================================================================\n// Slate Tables\n// ======================================================================\n/// Quickly skin tables using variables from a SASS map\n/// @example scss - Tables\n/// table {\n///     @include table($default-table);\n/// }\n/// @author Hash&Salt\n/// @param {Variable} $table-skin [$default-table] - SASS map to use for the skin.\n/// @group Tables\n\n@mixin tableelement($table-skin: $default-table, $el) {\n  @include rem(padding, map-deep-get($table-skin, $el, 'padding'));\n  @include rem(font-size, map-deep-get($table-skin, $el, 'fontsize'));\n  background: map-deep-get($table-skin, $el, 'background');\n  font-family: map-deep-get($table-skin, $el, 'fontfamily');\n  font-weight: map-deep-get($table-skin, $el, 'fontweight');\n  color: map-deep-get($table-skin, $el, 'fontcolor');\n  text-align: map-deep-get($table-skin, $el, 'textalign');\n  @include borders(map-deep-get($table-skin, $el, 'borderwidth'), map-deep-get($table-skin, $el, 'borderstyle'), map-deep-get($table-skin, $el, 'bordercolor'));\n}\n\n@mixin table($table-skin: $default-table) {\n  font-family: map-deep-get($table-skin, 'fontfamily');\n  table-layout: map-deep-get($table-skin, 'layout');\n  border-collapse: map-deep-get($table-skin, 'bordercollapse');\n  width: map-deep-get($table-skin, 'width');\n  margin: map-deep-get($table-skin, 'margin');\n  background-color: map-deep-get($table-skin, 'background');\n  @include borders(map-deep-get($table-skin, 'borderwidth'), map-deep-get($table-skin, 'borderstyle'), map-deep-get($table-skin, 'bordercolor'));\n\n  caption {\n    @include tableelement($table-skin, 'caption');\n  }\n\n  thead {\n    td,\n    th {\n      @include tableelement($table-skin, 'header');\n    }\n  }\n\n  tbody {\n    td {\n      @include tableelement($table-skin, 'body');\n    }\n  }\n\n  tfoot {\n    td {\n      @include tableelement($table-skin, 'footer');\n    }\n  }\n}\n","// ======================================================================\n// 05-objects - Container\n// ======================================================================\n\n.container {\n  @include container;\n}\n","// ======================================================================\n// Slate Framework <hello@slateengine.com>\n// ======================================================================\n//\n// ======================================================================\n// Slate Grid\n// ======================================================================\n\n// Insipired by:\n// -------------------\n// Profound Grid: http://www.profoundgrid.com/\n// Semantic Grid: http://www.semantic.gs\n// Susy: http://susy.oddbird.net\n// Negative Grid: http://chrisplaneta.com/freebies/negativegrid-fluid-css-grid-by-chris-planeta/\n// ======================================================================\n/// Establish the grid-containing element. This is wrapper element for your columns.\n/// @example scss - Container\n/// .element {\n///     @include container;\n/// }\n/// @param {Variable} $grid-max-width [$center-container-max-width] - Maximum width that the containers will grow too.\n/// @param {Variable} $grid-center [$center-containers] - Center the container on the page without the need for additional markup\n/// @group Grid\n@mixin container($grid-max-width: $center-container-max-width, $grid-center: $center-containers, $c-margin: $container-margin) {\n  @include clearfix('mojo');\n  @if $grid-center {\n    @include rem(max-width, $grid-max-width);\n    margin: {\n      left: auto;\n      right: auto;\n    }\n    width: container-width($c-margin);\n  } @else {\n    width: container-width($c-margin);\n    margin-left: $c-margin;\n    margin-right: $c-margin;\n  }\n}\n/// Define columns.\n/// @example scss - Column\n/// .element {\n///     @include container;\n///     .col {@include column(6,3);}\n/// }\n/// @param {Variable} $columns-width - How many columns to span\n/// @param {Variable} $padding-columns - How many columns to push over by\n/// @group Grid\n@mixin column($columns-width, $padding-columns: null, $g-width: $gutter-width) {\n  float: left;\n  margin-right: -100%;\n  $width-perc: element-width($columns-width, $g-width);\n  width: $width-perc;\n  @if $padding-columns != null {\n    @include push($padding-columns, $g-width);\n  }\n}\n/// Push columns over.\n/// @example scss - Push\n/// .wrapper {\n///     @include container;\n///     .col {@include column(6); @include push(3);}\n/// }\n/// @param {Variable} $column-index - How many columns to push over by\n/// @group Grid\n@mixin push($column-index, $g-width: $gutter-width) {\n  $width-perc: 0;\n  @if $total-width == 100% {\n    $width-perc: $g-width + element-width($column-index, $g-width);\n  } @else {\n    // $width-perc: (column_width() + $g-width)*$column-index;\n    $width-perc: $g-width + element-width($column-index, $g-width);\n  }\n  margin-left: $width-perc;\n}\n// HELPER MIXINS\n/// Not really recommended, but if you like using a whole load of predefined classes, this is for you. It uses the column and container classes defined in the config.scss to generate CSS for a container, all columns as defined in $total-columns, and all matching push classes. Warning: This will add CSS to your project that you may or may not use.\n/// @example scss - Helper Classes\n///   @include generate_helper_classes;\n/// @example html - Helper Classes\n/// <div class='row'>\n/// <div class='col6 push3'>6 wide column pushed over by 3</div>\n/// </div>\n/// @param {Variable} $helper-break [medium] - The breakpoint at which the columns stack up into full width columns.\n/// @group Grid\n@mixin generate-helper-classes($helper-break: $bp-medium) {\n  // Helper Class: Container\n  .#{$class-container} {\n    @include container;\n  }\n  // Helper Class: Columns\n  @for $i from 1 through $total-columns {\n    .#{$class-column}#{$i} {\n      @include column(12);\n      margin-bottom: $column-bottom-spacing;\n      clear: both;\n    }\n  }\n  @include minbreak($helper-break) {\n    // Helper Class: Columns\n    @for $i from 1 through $total-columns {\n      .#{$class-column}#{$i} {\n        @include column($i);\n        clear: none;\n      }\n    }\n    // Helper Class: Horizontal Position\n    @for $i from 0 through $total-columns - 1 {\n      .#{$class-push}#{$i} {\n        @include push($i);\n        margin-bottom: $column-bottom-spacing;\n      }\n    }\n  }\n}\n/// Use this to push equal columns over with the same class, for example a page equal sized product thumbnails or portfolio of images.\n/// Just so you know, it's much easier and more flexible to do this with the Gridler mixin :)\n/// @example scss - Grid Positions\n/// .wrapper {\n///     @include container;\n///     .positioncol {@include column(3);}\n///     @include generate_grid_positions('positioncol', 3, 26px);\n/// }\n/// @example html - Grid Positions\n/// <div class='container'>\n/// <div class='positioncol'>A Pushed Column</div>\n/// <div class='positioncol'>A Pushed Column</div>\n/// <div class='positioncol'>A Pushed Column</div>\n/// <div class='positioncol'>A Pushed Column</div>\n/// </div>\n/// @param {Variable} $column-selector - The class name of the element to effect.\n/// @param {Variable} $element-width - Desired column width.\n/// @param {Variable} $ggsp [$column-bottom-spacing] - Space under the repeated columns.\n/// @group Grid\n@mixin generate-grid-positions($column-selector, $element-width, $ggsp: $column-bottom-spacing, $g-width: $gutter-width) {\n  $cols-per-row: floor($total-columns / $element-width);\n  @for $i from 1 through $cols-per-row {\n    #{$column-selector}:nth-child(#{$cols-per-row}n+#{$i}) {\n      @include push(($i - 1) * $element-width, $g-width);\n      @include rem(margin-bottom, $ggsp);\n      @if $i == 1 {\n        clear: both;\n      } @else {\n        clear: none;\n      }\n    }\n  }\n}\n\n// ======================================================================\n// Layout Kit\n// ======================================================================\n\n/// The Gridler allows you to very quickly build grids of equal sized columns\n/// and set breakpoints for how the columns columns collapse. A use case for this would be something like a product list on an ecommerce site or a portfolio of work.\n/// @example scss - Default Gridler\n/// .parentdiv {\n///   @include gridler;\n///      ...\n/// }\n/// @example scss - Custom Gridler\n/// .parentdiv {\n///   @include gridler($gridler-elm: 'your-class', $gridler-base: 12, $gsmall: 6, $gmedium: 4, $glarge: 3, $gsmbp: $bp-small, $gmebp: $bp-medium, $glgbp: 1440px);\n///      ...\n/// }\n/// @param {Variable} $gridler-elm [$gridler-element] - Class to use for the columns. Set globally in the config, but can be set at will when using the mixin.\n/// @param {Variable} $gridler-base [$gridler-default-c] - Default column width to use before Media Queries kick in.\n/// @param {Variable} $gsmall [$gridler-sm-c] - Number of columns to use at the smallest size\n/// @param {Variable} $gmedium [$gridler-me-c] - Number of columns to use at the medium size\n/// @param {Variable} $glarge [$gridler-lg-c] - Number of columns to use at the largest size\n/// @param {Variable} $gsmbp [$gridler-sm] - Break point for the small range\n/// @param {Variable} $gmebp [$gridler-me] - Break point for the medium range\n/// @param {Variable} $glgbp [$gridler-lg] - Break point for the large range\n/// @author Hash&Salt\n/// @group Layout Helpers\n\n@mixin gridler($gridler-elm: $gridler-element, $gcbsp: $gridler-column-bottom-spacing, $gsmall: $gridler-sm-c, $gmedium: $gridler-me-c, $glarge: $gridler-lg-c, $g-width: $gutter-width, $c-margin: $container-margin, $gsmbp: $gridler-sm, $gmebp: $gridler-me, $glgbp: $gridler-lg, $gridler-center: $center-containers, $gridler-maxwidth: $center-container-max-width) {\n  @include container($gridler-maxwidth, $gridler-center, $c-margin);\n\n  > .#{$gridler-elm} {\n    @include column($total-columns);\n    @include rem(margin-bottom, $gcbsp);\n    clear: both;\n  }\n  @media screen and (min-width: $gsmbp) {\n    @include generate-grid-positions('.#{$gridler-elm}', $gsmall, $gcbsp, $g-width);\n\n    > .#{$gridler-elm} {\n      @include column($gsmall, null, $g-width);\n      @include rem(margin-bottom, $gcbsp);\n      clear: none;\n    }\n  }\n  @media screen and (min-width: $gmebp) {\n    @include generate-grid-positions('.#{$gridler-elm}', $gmedium, $gcbsp, $g-width);\n\n    > .#{$gridler-elm} {\n      @include column($gmedium, null, $g-width);\n      @include rem(margin-bottom, $gcbsp);\n      clear: none;\n    }\n  }\n  @media screen and (min-width: $glgbp) {\n    @include generate-grid-positions('.#{$gridler-elm}', $glarge, $gcbsp, $g-width);\n\n    > .#{$gridler-elm} {\n      @include column($glarge, null, $g-width);\n      @include rem(margin-bottom, $gcbsp);\n      clear: none;\n    }\n  }\n}\n\n// Holygrail\n// ======================================================================\n\n/// Easily pull off a triple column layour aka The Holy Grail.\n/// @example scss - Default Holy Grail\n/// .parentdiv {\n///   @include holygrail;\n///      ...\n/// }\n/// @example scss - Custom Holy Grail\n/// .parentdiv {\n///   @include holygrail($holygrail-left-elm: 'holygrail-left', $holygrail-middle-elm: 'holygrail-middle', $holygrail-right-elm: 'holygrail-right', $holygrail-left-c: 2, $holygrail-middle-c: 3, $holygrail-right-c: 7, $holygrail-bp: 640px);\n///      ...\n/// }\n/// @param {Variable} $elm [$element] - Class to use for the columns. Set globally in the config, but can be set at will when using the mixin.\n/// @param {Variable} $gsmall [$sm-c] - Number of columns to use at the smallest size\n/// @param {Variable} $gmedium [$me-c] - Number of columns to use at the medium size\n/// @param {Variable} $glarge [$lg-c] - Number of columns to use at the largest size\n/// @group Layout Helpers\n\n@mixin holygrail($holygrail-left-elm: $holygrail-left-element, $holygrail-middle-elm: $holygrail-middle-element, $holygrail-right-elm: $holygrail-right-element, $holygrail-bp: $holygrail-breakpoint, $holygrail-left-c: $holygrail-left-column, $holygrail-middle-c: $holygrail-middle-column, $holygrail-right-c: $holygrail-right-column, $g-width: $gutter-width, $c-margin: $container-margin, $holygrail-center: $center-containers, $holygrail-maxwidth: $center-container-max-width, $gcbsp: $holygrail-column-bottom-spacing) {\n  @include container($holygrail-maxwidth, $holygrail-center, $c-margin);\n\n  .#{$holygrail-left-elm},\n  .#{$holygrail-middle-elm},\n  .#{$holygrail-right-elm} {\n    @include column(12, null, $g-width);\n    @include rem(margin-bottom, $gcbsp);\n    clear: both;\n  }\n  @media screen and (min-width: $holygrail-bp) {\n    .#{$holygrail-left-elm} {\n      @include column($holygrail-left-c, null, $g-width);\n      clear: none;\n    }\n\n    .#{$holygrail-middle-elm} {\n      @include column($holygrail-middle-c, $holygrail-left-c, $g-width);\n      clear: none;\n    }\n\n    .#{$holygrail-right-elm} {\n      @include column($holygrail-right-c, $holygrail-left-c + $holygrail-middle-c, $g-width);\n      clear: none;\n    }\n  }\n}\n\n// Flank\n// ======================================================================\n\n/// Flank allows to you do a content area flank by a sidebar, either on the left or the right.\n/// @example scss - Default Gridler\n/// .parentdiv {\n///   @include flank;\n///      ...\n/// }\n/// @example scss - Custom Gridler\n/// .parentdiv {\n///   @include flank($flankdir: 'left', $flank-flank-elm: 'flank', $flank-main-elm: 'main', $flank-main-c: 7, $flank-flank-c: 5, $flank-bp: 640px);\n///      ...\n/// }\n/// @param {Variable} $flankdir - Side you want the to flank to appear. Set to right or left\n/// @param {Variable} $flank-main-elm [$flank-main-element] - Class for the large area\n/// @param {Variable} $flank-flank-elm [$flank-flank-element] - Class for the small area\n/// @param {Variable} $flank-bp [$flank-breakpoint] - Breakpoint at which the flank collapse to one column\n/// @param {Variable} $flank-main-c [$flank-main-column] - Width in columns of large area\n/// @param {Variable} $flank-flank-c [$flank-flank-column] - Width in columns of large area\n/// @group Layout Helpers\n\n@mixin flank($flankdir: 'right', $flank-main-elm: $flank-main-element, $flank-flank-elm: $flank-flank-element, $flank-main-c: $flank-main-column, $flank-flank-c: $flank-flank-column, $flank-bp: $flank-breakpoint, $gcbsp: $flank-column-bottom-spacing, $g-width: $gutter-width, $c-margin: $container-margin, $flank-center: $center-containers, $flank-maxwidth: $center-container-max-width) {\n  @include container($flank-maxwidth, $flank-center, $c-margin);\n\n  .#{$flank-flank-elm},\n  .#{$flank-main-elm} {\n    @include column(12, null, $g-width);\n    @include rem(margin-bottom, $gcbsp);\n    clear: both;\n  }\n\n  @if $flankdir == 'left' {\n    // left flank\n    @media screen and (min-width: $flank-bp) {\n      .#{$flank-main-elm} {\n        @include column($flank-main-c, $flank-flank-c, $g-width);\n        clear: none;\n      }\n\n      .#{$flank-flank-elm} {\n        @include column($flank-flank-c, 0, $g-width);\n        clear: none;\n      }\n    }\n  }\n\n  @if $flankdir == 'right' {\n    // right flank\n    @media screen and (min-width: $flank-bp) {\n      .#{$flank-main-elm} {\n        @include column($flank-main-c, 0, $g-width);\n        clear: none;\n      }\n\n      .#{$flank-flank-elm} {\n        @include column($flank-flank-c, $flank-main-c, $g-width);\n        clear: none;\n      }\n    }\n  }\n}\n"],"sourceRoot":""}