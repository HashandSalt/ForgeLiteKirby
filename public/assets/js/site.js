/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/modules/head.js":
/*!********************************!*\
  !*** ./src/js/modules/head.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*! head.responsive - v2.0.0-alpha */\n\n/*\n * HeadJS     The only script in your <HEAD>\n * Author     Tero Piirainen  (tipiirai)\n * Maintainer Robert Hoffmann (itechnology)\n * License    MIT / http://bit.ly/mit-license\n * WebSite    http://headjs.com\n */\n\n/* Feature List\n *\n * HashChange handling\n * lt/gt handling for browser versions, viewport width, and viewport height\n * Event handling: head.on(), based on MinPubSub\n * Make as many variables as possible availiable in css AND js\n * Detect phone, tablet, mobile, desktop\n * We could detect phone/tablet by measuring the aspect ratio of the screen resolution (not viewport) and making sure it's .mobile-true\n * Move all features to api.features[]\n * Make groups: api.viewport, api.screen, api.browser, api.features, api.page, api.section[], api.hash[]\n * Maybe move api.features.landscape/portrait to api.viewport ..it is more related to that than an actual feature\n * Maybe move api.features.mobile/desktop/touch to api.browser ..it is more related to that than an actual feature\n * We no longer declare min/max versions of browsers (too many out there), instead each version we wish to generate lt/gt for\n * Someone proposed to add operating system detection: window, linux, ios, mac, etc ..i'm doubtful to being able to detect that consistently with a minimal amount of regexp\n */\n(function (win, undefined) {\n  \"use strict\"; //#region Variables\n\n  var doc = win.document,\n      nav = win.navigator,\n      loc = win.location,\n      html = doc.documentElement,\n      klass = [],\n      conf = {\n    widths: [240, 320, 480, 640, 768, 800, 1024, 1280, 1366, 1440, 1680, 1920],\n    heights: [320, 480, 600, 768, 800, 900, 1050],\n    widthCss: {\n      \"gt\": true,\n      \"lt\": true\n    },\n    heightCss: {\n      \"gt\": true,\n      \"lt\": true\n    },\n    browsers: {\n      \"ie\": [7, 11],\n      \"ff\": [4, 26] //,\"chrome\" : [23, 33]\n      //,\"ios\"    : [4, 7]\n      //,\"android\": [2, 4]\n      //,\"webkit\" : [10, 12]\n      //,\"opera\"  : [10, 12]\n\n    },\n    browserCss: {\n      \"gt\": true,\n      \"lt\": true\n    },\n    html5: true,\n    hashtags: true,\n    page: \"page\",\n    section: \"section\",\n    hash: \"hash\",\n    head: \"head\"\n  };\n\n  if (win.head_conf) {\n    for (var item in win.head_conf) {\n      if (win.head_conf[item] !== undefined) {\n        conf[item] = win.head_conf[item];\n      }\n    }\n  }\n\n  var head = conf.head || \"head\";\n  var api = win[head] = win[head] || {}; //#endregion\n  //#region Experimental\n  // INFO: not sure if this is needed\n  // In anycase it allows you to create namespaces on the fly without declaring a bunch of multiple objects\n  // makeNameSpace(\"head.viewport.height\");\n\n  function makeNameSpace() {\n    var a = arguments,\n        o = api,\n        j,\n        d,\n        arg; // Array caching performance: http://bonsaiden.github.com/JavaScript-Garden/#array.general\n\n    for (var i = 0, l = a.length; i < l; i++) {\n      o = api; //Reset base object per argument or it will get reused from the last\n\n      arg = a[i];\n\n      if (arg.indexOf(\".\") > -1) {\n        //Skip this if no \".\" is present\n        d = arg.split(\".\");\n\n        for (j = d[0] === head ? 1 : 0; j < d.length; j++) {\n          o[d[j]] = o[d[j]] || {};\n          o = o[d[j]];\n        }\n      } else {\n        o[arg] = o[arg] || {};\n        o = o[arg]; //Reset base object to the new object so it's returned\n      }\n    }\n\n    return o;\n  } // get the value closest to num from an array of numbers\n  // this can be used for determining a height/width breakpoint\n  // still, is it usefull to determine exact/closest breakpoint when we already have lt/gt\n\n\n  function closest(num, arrNum) {\n    var c = null;\n\n    for (var i = 0, l = arrNum.length; i < l; i++) {\n      if (c == null || Math.abs(arrNum[i] - num) < Math.abs(c - num)) {\n        c = arrNum[i];\n      }\n    }\n\n    return c;\n  } // NEEDED ?\n\n\n  function push(name, value, isCss) {\n    // INFO: the idea is to be able to push a value to a specific namespace (api.browser, api.viewport, ..)\n    // we need a clean way to push values to CSS as well as to JS\n    // we also need to be able to add, update, and remove those values\n    // ...still figuring this out\n    // push(\"h\", ih, css);\n    // push(api.viewport.height, ih, js);\n    // push(\"viewport\", \"height\", value);\n    api[name][key] = value;\n\n    if (isCss) {\n      klass[klass.length] = name.concat(\"-\", value);\n    } else {\n      name = value;\n    }\n\n    api.setFeature();\n  }\n\n  ; //#endregion\n  //#region Internal Functions\n\n  function each(arr, fn) {\n    // Array caching performance: http://bonsaiden.github.com/JavaScript-Garden/#array.general\n    for (var i = 0, l = arr.length; i < l; i++) {\n      fn.call(arr, arr[i], i);\n    }\n  }\n\n  function pushClass(name) {\n    klass[klass.length] = name;\n  }\n\n  function removeClass(name) {\n    // need to test for both space and no space\n    // https://github.com/headjs/headjs/issues/270\n    // https://github.com/headjs/headjs/issues/226\n    var re = new RegExp(\" ?\\\\b\" + name + \"\\\\b\");\n    html.className = html.className.replace(re, \"\");\n  } //#endregion\n\n\n  api.features = {};\n\n  api.setFeature = function (key, enabled, queue) {\n    // internal: apply all classes\n    if (!key) {\n      html.className += \" \" + klass.join(\" \");\n      klass = [];\n      return api;\n    }\n\n    if (Object.prototype.toString.call(enabled) === \"[object Function]\") {\n      enabled = enabled.call();\n    }\n\n    pushClass(key + \"-\" + enabled);\n    api.features[key] = !!enabled; // apply class to HTML element\n\n    if (!queue) {\n      // don't really like the idea of doing 3 operations in a row here\n      removeClass(key + \"-true\");\n      removeClass(key + \"-false\");\n      removeClass(key);\n      api.setFeature();\n    }\n\n    return api;\n  }; //#region Quick Features\n  // we support js, we got here !\n\n\n  api.setFeature(\"js\", true, true); // browser type & version\n\n  var ua = nav.userAgent.toLowerCase(),\n      mobile = /mobile|android|kindle|silk|midp|phone|(windows .+arm|touch)/.test(ua); // useful for enabling/disabling feature (we can consider a desktop navigator to have more cpu/gpu power)\n\n  api.setFeature(\"mobile\", mobile, true);\n  api.setFeature(\"desktop\", !mobile, true); // are we on a touch device ?\n\n  api.setFeature(\"touch\", \"ontouchstart\" in win, true); // used by css router\n\n  api.setFeature(\"hashchange\", \"onhashchange\" in win, true); //#endregion\n  //#region Browser Detection\n  // http://www.zytrax.com/tech/web/browser_ids.htm\n  // http://www.zytrax.com/tech/web/mobile_ids.html\n\n  ua = /(chrome|firefox)[ \\/]([\\w.]+)/.exec(ua) || // Chrome & Firefox\n  /(iphone|ipad|ipod)(?:.*version)?[ \\/]([\\w.]+)/.exec(ua) || // Mobile IOS\n  /(android)(?:.*version)?[ \\/]([\\w.]+)/.exec(ua) || // Mobile Webkit\n  /(webkit|opera)(?:.*version)?[ \\/]([\\w.]+)/.exec(ua) || // Safari & Opera\n  /(msie) ([\\w.]+)/.exec(ua) || /(trident).+rv:(\\w.)+/.exec(ua) || [];\n  var browser = ua[1],\n      version = parseFloat(ua[2]);\n\n  switch (browser) {\n    case \"msie\":\n    case \"trident\":\n      browser = \"ie\";\n      version = doc.documentMode || version;\n      break;\n\n    case \"firefox\":\n      browser = \"ff\";\n      break;\n\n    case \"ipod\":\n    case \"ipad\":\n    case \"iphone\":\n      browser = \"ios\";\n      break;\n\n    case \"webkit\":\n      browser = \"safari\";\n      break;\n  } // Browser vendor and version\n\n\n  api.browser = {\n    name: browser,\n    version: version\n  };\n  api.browser[browser] = true;\n\n  for (var key in conf.browsers) {\n    if (browser === key) {\n      // is this usefull ?\n      // we have the exact browser version below\n      // but this also applies to other browsers, so we could have .ff and .ie-false\n      pushClass(key + \"-true\"); // Array caching performance: http://bonsaiden.github.com/JavaScript-Garden/#array.general\n\n      for (var i = 0, l = conf.browsers[key].length; i < l; i++) {\n        var supported = conf.browsers[key][i];\n\n        if (conf.browserCss.gt && version > supported) {\n          pushClass(key + \"-gt\" + supported);\n        } else if (conf.browserCss.lt && version < supported) {\n          pushClass(key + \"-lt\" + supported);\n        }\n      }\n    } else {\n      // is this usefull ?\n      // we have the exact browser version below\n      // but this also applies to other browsers, so we could have .ie and .ff-false\n      pushClass(key + \"-false\");\n    }\n  }\n\n  pushClass(browser);\n  pushClass(browser + parseInt(version, 10)); //#endregion\n  //#region HTML5 Shim\n\n  if (conf.html5 && browser === \"ie\" && version < 9) {\n    // HTML5 support : you still need to add html5 css initialization styles to your site\n    // See: /site/assets/css/html5.min.css\n    each(\"abbr|article|aside|audio|canvas|details|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|progress|section|summary|time|video\".split(\"|\"), function (el) {\n      doc.createElement(el);\n    });\n  } //#endregion\n  //#region CSS Router: Page/Section\n\n\n  function buildRoute(path) {\n    /// <summary>can be used to emulate hashchange event by subscribing to win/doc onclick and testing if url has changed</summary>\n    var items = loc.pathname.split(\"/\");\n    each(items, function (el, i) {\n      if (this.length > 2 && this[i + 1] !== undefined) {\n        if (i) {\n          pushClass(conf.section + \"-\" + this.slice(i, i + 1).join(\"-\").toLowerCase().replace(/\\./g, \"-\"));\n        }\n      } else {\n        // pageId\n        var id = el || \"index\",\n            index = id.indexOf(\".\");\n\n        if (index > 0) {\n          id = id.substring(0, index);\n        }\n\n        html.id = conf.page + \"-\" + id.toLowerCase(); // on root?\n\n        if (!i) {\n          pushClass(conf.section + \"-root\");\n        }\n      }\n    });\n  }\n\n  buildRoute(loc.pathname); //#endregion\n  //#region CSS Router: HasChange\n  // contains current hashes, so we can remove them when a change occurs\n\n  var hashCache = [];\n\n  function onhashChange() {\n    // remove old values\n    each(hashCache, function (el) {\n      removeClass(el);\n    }); // get current hash\n\n    var items = loc.hash.replace(/(!|#)/g, \"\").split(\"/\"); // add new values\n\n    each(items, function (el) {\n      if (!!el) {\n        var name = conf.hash + \"-\" + el.toLowerCase().replace(/\\./g, \"-\");\n        hashCache.push(name);\n        pushClass(name);\n      }\n    }); // commit changes\n\n    api.setFeature();\n  } //#endregion\n  //#region Screen Detection\n  // screen information placeholder\n\n\n  api.screen = {}; // viewport information placeholder\n\n  api.viewport = {}; // viewport resolutions: w-100, lt-480, lt-1024 ...\n\n  function screenSize() {\n    // remove earlier sizes\n    html.className = html.className.replace(/ (w-|w-gt|w-lt|h-|h-gt|h-lt)\\d+/g, \"\"); // Viewport width\n\n    var iw = win.innerWidth || html.clientWidth,\n        ow = win.outerWidth || win.screen.width;\n    api.viewport.width = iw;\n    api.browser.width = ow; // INFO: See comment on function closest()\n    //pushClass(\"w-\" + iw);\n\n    pushClass(\"w-\" + closest(iw, conf.widths));\n    each(conf.widths, function (width) {\n      if (conf.widthCss.gt && iw > width) {\n        pushClass(\"w-gt\" + width);\n      } else if (conf.widthCss.lt && iw < width) {\n        pushClass(\"w-lt\" + width);\n      }\n    }); // Viewport height\n\n    var ih = win.innerHeight || html.clientHeight,\n        oh = win.outerHeight || win.screen.height;\n    api.viewport.height = ih;\n    api.browser.height = oh; // INFO: See comment on function closest()\n    //pushClass(\"h-\" + ih);\n\n    pushClass(\"h-\" + closest(ih, conf.heights));\n    each(conf.heights, function (height) {\n      if (conf.heightCss.gt && ih > height) {\n        pushClass(\"h-gt\" + height);\n      } else if (conf.heightCss.lt && ih < height) {\n        pushClass(\"h-lt\" + height);\n      }\n    }); // INFO: maybe we should detect and take the aspect ratio into account too ?\n    // A desktop browser whose window can be resized, might give weird results (on a responsive site) if it reports portrait mode, when in reality it's just a few pixels less than landscape\n    // For example:\n    // Detect based on Ratio. 0.8-0.9 seem like a good threshhold compromise, even if in reality 0.99 can be considered as portrait too.\n    // Common mobile ratios are: 0.56: 720x1280, 0.6: 480x800, 0.66: 320x480 640x960, 0.75: 600x800 768x1024\n    // Galaxy S 1/2 480x800 3 720x1280, IPhone 4/4S 640�960, IPhone 5 640�1136 ..seems like 480 is a good target\n    // var portrait  = ((iw / ih) <= 0.85);\n    // var landscape = !portrait;\n\n    api.setFeature(\"portrait\", ih > iw);\n    api.setFeature(\"landscape\", ih < iw);\n  }\n\n  screenSize(); //api.setFeature();\n  // Throttle navigators from triggering too many resize events\n\n  var resizeId = 0;\n\n  function onResize() {\n    win.clearTimeout(resizeId);\n    resizeId = win.setTimeout(screenSize, 50);\n  } //#endregion\n  //#region EventHandlers\n  // Manually attach, as to not overwrite existing handler\n\n\n  if (win.addEventListener) {\n    if (conf.hashtags && api.features.hashchange) {\n      win.addEventListener(\"hashchange\", onhashChange, false); // first load\n\n      onhashChange();\n    }\n\n    win.addEventListener(\"resize\", onResize, false);\n  } else {\n    // IE8 and less\n    if (conf.hashtags && api.features.hashchange) {\n      win.attachEvent(\"onhashchange\", onhashChange); // first load\n\n      onhashChange();\n    }\n\n    win.attachEvent(\"onresize\", onResize);\n  } //#endregion\n  //#region Public Exports\n  // we should probably stop declaring public stuff above and make a \"exports\" section here\n  //#endregion\n\n})(window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/head.js\n");

/***/ }),

/***/ "./src/js/site.js":
/*!************************!*\
  !*** ./src/js/site.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// ======================================================================\n// Forge Lite | hello@hashandsalt.com\n// ======================================================================\n// window.$ = window.jQuery = require('jquery');\n// ======================================================================\n// Modules\n// ======================================================================\n// require any further scripts here ie:\n// require('npmpackagename');\n// require('./mylocalfile.js');\n// head.js\n__webpack_require__(/*! ./modules/head.js */ \"./src/js/modules/head.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvc2l0ZS5qcz8yOGYwIl0sIm5hbWVzIjpbInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQUEsbUJBQU8sQ0FBQyxtREFBRCxDQUFQIiwiZmlsZSI6Ii4vc3JjL2pzL3NpdGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGb3JnZSBMaXRlIHwgaGVsbG9AaGFzaGFuZHNhbHQuY29tXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIHdpbmRvdy4kID0gd2luZG93LmpRdWVyeSA9IHJlcXVpcmUoJ2pxdWVyeScpO1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBNb2R1bGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIHJlcXVpcmUgYW55IGZ1cnRoZXIgc2NyaXB0cyBoZXJlIGllOlxuLy8gcmVxdWlyZSgnbnBtcGFja2FnZW5hbWUnKTtcbi8vIHJlcXVpcmUoJy4vbXlsb2NhbGZpbGUuanMnKTtcblxuLy8gaGVhZC5qc1xucmVxdWlyZSgnLi9tb2R1bGVzL2hlYWQuanMnKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/site.js\n");

/***/ }),

/***/ "./src/sass/site.scss":
/*!****************************!*\
  !*** ./src/sass/site.scss ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Fzcy9zaXRlLnNjc3M/OGU1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL3NyYy9zYXNzL3NpdGUuc2Nzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/sass/site.scss\n");

/***/ }),

/***/ 0:
/*!***************************************************!*\
  !*** multi ./src/js/site.js ./src/sass/site.scss ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /Volumes/Server/Clients/Hash&Salt/hashandsalt2020/src/js/site.js */"./src/js/site.js");
module.exports = __webpack_require__(/*! /Volumes/Server/Clients/Hash&Salt/hashandsalt2020/src/sass/site.scss */"./src/sass/site.scss");


/***/ })

/******/ });